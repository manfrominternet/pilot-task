{"version":3,"sources":["Form/Form.jsx","components2/card/card.component.jsx","components2/card-list/card-list.component.jsx","components2/card/card-app.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","useState","email","password","formValues","setFormValues","formErrors","setFormErrors","isSubmitting","setIsSubmitting","redirect","setRedirect","handleChange","e","target","name","value","validate","values","errors","test","length","useEffect","Object","keys","console","log","to","className","onSubmit","preventDefault","noValidate","htmlFor","type","id","onChange","style","padding","Card","props","moy","address","city","CardList","moyns","map","CardApp","state","searchField","fetch","then","response","json","users","setState","this","filteredMoyns","filter","toLowerCase","includes","Component","drawerWidth","useStyles","makeStyles","theme","root","display","appBar","width","marginRight","drawer","flexShrink","drawerPaper","toolbar","mixins","content","flexGrow","backgroundColor","palette","background","default","spacing","PermanentDrawerRight","classes","CssBaseline","AppBar","position","Toolbar","Typography","variant","noWrap","src","alt","paragraph","exact","path","component","Drawer","paper","anchor","Divider","List","text","index","ListItem","button","ListItemIcon","ListItemText","primary","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f23c8479.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {  Redirect } from \"react-router-dom\";\n\n\nconst Form = () => {\n  const intialValues = { email: \"\", password: \"\" };\n\n  const [formValues, setFormValues] = useState(intialValues);\n  const [formErrors, setFormErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [redirect, setRedirect] = useState(false);\n\n  \n  const submit = () => {\n    console.log(redirect)\n    return <Redirect to=\"/users\" />;\n    };\n\n  \n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues({ ...formValues, [name]: value });\n  };\n\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setFormErrors(validate(formValues));\n    setIsSubmitting(true);\n  };\n\n  \n  const validate = (values) => {\n    let errors = {};\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n\n    if (!values.email) {\n      errors.email = \"Cannot be blank\";\n    } else if (!regex.test(values.email)) {\n      errors.email = \"Invalid email format\";\n    }\n\n    if (!values.password) {\n      errors.password = \"Cannot be blank\";\n    } else if (values.password.length < 8) {\n      errors.password = \"Password must be more than 8 characters\";\n    }\n\n    return errors;\n  };\n\n  useEffect(() => {\n    if (Object.keys(formErrors).length === 0 && isSubmitting) {\n      setRedirect(true);\n    \n    }\n  }, [formErrors]);\n\n  if (redirect) return submit();\n\n  return (\n    <div className=\"container\">\n        <div >\n           <h1>Sign in to continue</h1> \n            <form onSubmit={handleSubmit} noValidate>\n        <div className=\"form-row\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            value={formValues.email}\n            onChange={handleChange}\n            className={formErrors.email && \"input-error\"}\n          />\n          {formErrors.email && (\n            <span className=\"error\">{formErrors.email}</span>\n          )}\n        </div>\n\n        <div className=\"form-row\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            value={formValues.password}\n            onChange={handleChange}\n            className={formErrors.password && \"input-error\"}\n          />\n          {formErrors.password && (\n            <span className=\"error\">{formErrors.password}</span>\n          )}\n        </div>\n\n        <button style={{padding: \"1em\"}} type=\"submit\">Sign In</button>\n      </form></div>\n    </div>\n  );\n};\n\nexport default Form;\n","\nimport React from 'react';\n\nimport './card.styles.css';\n\nexport const Card = props => (\n  <div className='card-container'>\n    <h2> {props.moy.name} </h2>\n    <p> {props.moy.email} </p>\n    <p> {props.moy.address.city} </p>\n  </div>\n);","import React from 'react';\n\nimport { Card } from '../card/card.component';\n\nimport './card-list.styles.css';\n\nexport const CardList = props => (\n  <div className='card-list'>\n    {props.moyns.map(moy => (\n      <Card key={moy.id} moy={moy} />\n    ))}\n  </div>\n);","import React, { Component } from 'react';\n\nimport { CardList } from '../card-list/card-list.component';\n\n\n\n\nclass CardApp extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      moyns: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ moyns: users }));\n  }\n\n \n\n  render() {\n    const { moyns, searchField } = this.state;\n    const filteredMoyns = moyns.filter(moy =>\n      moy.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className='App'>\n        <h1>Users</h1>\n        <CardList moyns={filteredMoyns} />\n      </div>\n    );\n  }\n}\n\nexport default CardApp;","\n//import React, { useState, useEffect } from \"react\";\n/*Using ReactJS build a two-page web application.\n1. First page ('/' root route) should have a \"Login to view our user pool\" header, two input fields, one for Email and one for Password, and a \"Login\" button, one above the other. All elements should be center page.\n2. Each field should validate itself. Use Formik and Yup for form control and validation. Email should be a valid email string, and password should be a string with a minimum amount of 8 characters. Display relevant errors if fields are invalid.\n3. On successful login, the user is to be redirected to the second page ('/users' route). On page load make a GET request to https://jsonplaceholder.typicode.com/users and present each user in a card, displaying name, email, and city. \n4. Add a dummy navigation bar with Moyyn logo on the left side and some dummy buttons aligned to the right.\n\nOptional - use React-Router for routing.\nOptional - use Material-UI for the UI elements. */\n\n\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport './App.css';\nimport Form from \"./Form/Form\";\n\nimport CardApp from \"./components2/card/card-app\";\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginRight: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function PermanentDrawerRight() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar style={{backgroundColor: \"white\"}}>\n          <Typography variant=\"h6\" noWrap>\n         <img src=\"https://moyyn.com/wp-content/uploads/2020/03/cropped-Untitled-design-6-1.png\" alt=\"moyyn\"/> \n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Typography paragraph>\n        <header className=\"App-header\">\n      <BrowserRouter>\n      \n        <Switch>\n          <Route exact path=\"/\" component={ Form} />\n          <Route exact path=\"/users\" component={ CardApp} />\n        </Switch>\n      </BrowserRouter>\n      </header>\n        </Typography>\n   \n      </main>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor=\"right\"\n      >\n        <div className={classes.toolbar} />\n        <Divider />\n        <List>\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    </div>\n  );\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}